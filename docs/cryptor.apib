FORMAT: 1A

# Cryptor

Cryptography middleware for Ballot.

## Authentication

This API doesn't use authentication.

## Notational Conventions

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119](https://www.ietf.org/rfc/rfc2119).

## Errors

- `code`
    - `-32700` - Parse error
    - `-32600` - Invalid request
    - `-32601` - Method not found
    - `-32602` - Invalid params
    - `-32603` - Internal error

## Message Queue

Reply message is tagged persist iff `id` starts with `{` or `[`.

# Group Default

## Check system status [POST /status]

+ Request

    + Attributes
        + jsonrpc (enum, required)
            + `2.0` (string)
        + method (enum, required)
            + `status`
        + id (enum, required)
            + `123` (number)
            + `{}` (string)

+ Response 200

    + Attributes
        + jsonrpc (enum)
            + `2.0` (string)
        + result (object)
            + version: `4907ca16`
            + commitHash: `4907ca16faf693b76a71df0efd19ef9dcefaa309`
        + id (enum, required)
            + `123` (number)
            + `{}` (string)

# Group Ring Signature

## Setup [POST /newRing]

+ Request

    + Attributes
        + jsonrpc (enum, required)
            + `2.0` (string)
        + method (enum, required)
            + `newRing`
        + id (enum, required)
            + `123` (number)
            + `{}` (string)

+ Response 200

    + Attributes
        + jsonrpc (enum)
            + `2.0` (string)
        + result (object)
            + q: `acdc2c107bff745981be922065b3e308` (string)
            + g: `c6ad50b0f41696dbf2a0f01abf56ca74` (string)
        + id (enum, required)
            + `123` (number)
            + `{}` (string)

## Generate h [POST /genH]

+ Request

    + Attributes
        + jsonrpc (enum, required)
            + `2.0` (string)
        + method (enum, required)
            + `genH`
        + param (object, required)
            + q: `acdc2c107bff745981be922065b3e308` (string, required)
            + g: `c6ad50b0f41696dbf2a0f01abf56ca74` (string, required)
            + publicKeys: `aa57c17b4406f4b1b71b8e4f222714d3` `c8aeda0f3dccdf1b84a9e5ca87e045cc` (array[string], required)
        + id (enum, required)
            + `123` (number)
            + `{}` (string)

+ Response 200

    + Attributes
        + jsonrpc (enum)
            + `2.0` (string)
        + result (object)
            + h: `2e56f2ff6b9d33ae878001217d7e7d64` (string)
        + id (enum, required)
            + `123` (number)
            + `{}` (string)

## Verify [POST /verify]

+ Request

    + Attributes
        + jsonrpc (enum, required)
            + `2.0` (string)
        + method (enum, required)
            + `verify`
        + param (object, required)
            + q: `acdc2c107bff745981be922065b3e308` (string, required)
            + g: `c6ad50b0f41696dbf2a0f01abf56ca74` (string, required)
            + h: `2e56f2ff6b9d33ae878001217d7e7d64` (string, required)
            + publicKeys: `aa57c17b4406f4b1b71b8e4f222714d3` `c8aeda0f3dccdf1b84a9e5ca87e045cc` (array[string], required)
            + t: `bd700a31b8464dbe721b55ce5f76b971` (string, required)
            + payload: `{"bId":"876ef6f5fe7fd8d7",` (string, required)
            + s: `12a5deb064195ba51a7074fe5a1d83df` (array[string], required)
            + c: `e60363581e1b1cfb0365ff202ebda6cf` (array[string], required)
        + id (enum, required)
            + `123` (number)
            + `{}` (string)

+ Response 200

    + Attributes
        + jsonrpc (enum)
            + `2.0` (string)
        + result (object)
            + valid: 0 (number)
        + id (enum, required)
            + `123` (number)
            + `{}` (string)

