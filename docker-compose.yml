version: "2.3"
services:

  nginx:
    build: ./nginx
    restart: always
    ports:
      - "8888:80"
    volumes:
      - nginx-log:/var/log/nginx
    depends_on:
      storage:
        condition: service_started
      monitor:
        condition: service_started
      controller:
        condition: service_started
      filebeat:
        condition: service_started
    networks:
      - data

  controller:
    image: ansys-controller
    restart: always
    environment:
      BACKEND_LOG: "warn"
      ETCD_ENDPOINTS: '["etcd1:2379","etcd2:2379","etcd3:2379"]'
      RABBIT_HOST: rabbit
      RABBIT_PORT: 5672
      RABBIT_USER: "${RABBIT_USER}"
      RABBIT_PASS: "${RABBIT_PASS}"
      STORAGE_URL: "http://storage:3000"
      LOG_HOST: logstash
      LOG_PORT: 5044
    depends_on:
      rabbit:
        condition: service_healthy
      logstash:
        condition: service_healthy
    networks:
      - data

  storage:
    image: ansys-storage
    restart: always
    environment:
      BACKEND_LOG: "warn"
      DATA_PATH: "/ansys"
      LOG_HOST: logstash
      LOG_PORT: 5044
    volumes:
      - /root/ansys-moe/storage:/ansys
    depends_on:
      logstash:
        condition: service_healthy
    networks:
      - data

  monitor:
    image: ansys-monitor
    restart: always
    environment:
      BACKEND_LOG: "warn"
      RABBIT_HOST: rabbit
      RABBIT_PORT: 5672
      RABBIT_USER: "${RABBIT_USER}"
      RABBIT_PASS: "${RABBIT_PASS}"
    depends_on:
      rabbit:
        condition: service_healthy
    networks:
      - data

  rlangd:
    image: ansys-commond
    restart: always
    environment:
      REMOTE_URL: http://nginx
      RABBIT_HOST: rabbit
      RABBIT_PORT: 5672
      RABBIT_USER: "${RABBIT_USER}"
      RABBIT_PASS: "${RABBIT_PASS}"
      LOG_HOST: logstash
      LOG_PORT: 5044
      RLANG: 2
    depends_on:
      rabbit:
        condition: service_healthy
      logstash:
        condition: service_healthy
    networks:
      - data

  etcd1:
    image: quay.io/coreos/etcd:v3.2.18
    restart: always
    ports:
      - "23791:2379"
    volumes:
      - /root/ansys-moe/etcd1:/etcd_data
    environment:
      ETCD_DATA_DIR: /etcd_data
      ETCD_NAME: etcd1
      ETCD_INITIAL_ADVERTISE_PEER_URLS: http://etcd1:2380
      ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      ETCD_INITIAL_CLUSTER_STATE: new
      ETCD_INITIAL_CLUSTER_TOKEN: ansys-moe-etcd
      ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
      ETCD_ADVERTISE_CLIENT_URLS: http://etcd1:2379
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201"
    depends_on:
      logstash:
        condition: service_healthy
    networks:
      - data

  etcd2:
    image: quay.io/coreos/etcd:v3.2.18
    restart: always
    ports:
      - "23792:2379"
    volumes:
      - /root/ansys-moe/etcd2:/etcd_data
    environment:
      ETCD_DATA_DIR: /etcd_data
      ETCD_NAME: etcd2
      ETCD_INITIAL_ADVERTISE_PEER_URLS: http://etcd2:2380
      ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      ETCD_INITIAL_CLUSTER_STATE: new
      ETCD_INITIAL_CLUSTER_TOKEN: ansys-moe-etcd
      ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
      ETCD_ADVERTISE_CLIENT_URLS: http://etcd2:2379
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201"
    depends_on:
      logstash:
        condition: service_healthy
    networks:
      - data

  etcd3:
    image: quay.io/coreos/etcd:v3.2.18
    restart: always
    ports:
      - "23793:2379"
    volumes:
      - /root/ansys-moe/etcd3:/etcd_data
    environment:
      ETCD_DATA_DIR: /etcd_data
      ETCD_NAME: etcd3
      ETCD_INITIAL_ADVERTISE_PEER_URLS: http://etcd3:2380
      ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      ETCD_INITIAL_CLUSTER_STATE: new
      ETCD_INITIAL_CLUSTER_TOKEN: ansys-moe-etcd
      ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
      ETCD_ADVERTISE_CLIENT_URLS: http://etcd3:2379
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201"
    depends_on:
      logstash:
        condition: service_healthy
    networks:
      - data

  rabbit:
    image: rabbitmq:management-alpine
    hostname: rabbit
    restart: always
    ports:
      - "9511:5672"
      - "9512:15672"
    environment:
      RABBITMQ_LOGS: /var/log/rabbitmq/rabbit.log
      RABBITMQ_DEFAULT_USER: ansys-moe
      RABBITMQ_DEFAULT_PASS: "${RABBIT_PASS}"
    volumes:
      - rabbit-log:/var/log/rabbitmq
      - /root/ansys-moe/rabbit:/var/lib/rabbitmq/mnesia
    healthcheck:
      test: ["CMD", "rabbitmqctl", "node_health_check"]
      interval: 15s
      timeout: 10s
      retries: 8
    depends_on:
      filebeat:
        condition: service_started
      logstash:
        condition: service_healthy
    networks:
      - data

  filebeat:
    build: ./filebeat
    restart: always
    volumes:
      - nginx-log:/var/log/nginx:ro
      - rabbit-log:/var/log/rabbitmq:ro
    depends_on:
      logstash:
        condition: service_healthy
    networks:
      - ctrl

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    environment:
      cluster.name: docker-cluster
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - /root/ansys-moe/es:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "wget", "-O-", "http://localhost:9200"]
      interval: 15s
      timeout: 10s
      retries: 8
    networks:
      - ctrl

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.2.4
    environment:
      SERVER_NAME: elasticsearch
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - ctrl

  logstash:
    build: ./logstash
    ports:
      - "12201:12201/udp"
      - "5044:5044"
      - "5044:5044/udp"
    volumes:
      - /dev/urandom:/dev/random
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "http://localhost:9600/?pretty"]
      interval: 30s
      timeout: 10s
      retries: 8
    networks:
      - data
      - ctrl

volumes:
  nginx-log:
    driver: local
  rabbit-log:
    driver: local

networks:
  data:
    driver: bridge
  ctrl:
    driver: bridge
